// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateClient(ctx context.Context, arg CreateClientParams) (Client, error)
	CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error)
	CreateProjectTeam(ctx context.Context, arg CreateProjectTeamParams) (ProjectTeam, error)
	CreateSBU(ctx context.Context, arg CreateSBUParams) (Sbus, error)
	CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserRole(ctx context.Context, roleName string) (UserRole, error)
	DeleteClient(ctx context.Context, id int64) error
	DeleteProject(ctx context.Context, id int64) error
	DeleteProjectTeamUser(ctx context.Context, id int64) error
	DeleteRole(ctx context.Context, id int64) error
	DeleteSBU(ctx context.Context, id int64) error
	DeleteTask(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetClientByID(ctx context.Context, id int64) (Client, error)
	GetProjectByID(ctx context.Context, id int64) (Project, error)
	GetProjectTeamUserByID(ctx context.Context, id int64) (ProjectTeam, error)
	GetSBU(ctx context.Context, id int64) (Sbus, error)
	GetTaskByID(ctx context.Context, id int64) (Task, error)
	GetTaskByTaskID(ctx context.Context, id int64) (Task, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	GetUserRoleByID(ctx context.Context, id int64) (UserRole, error)
	ListAdmins(ctx context.Context, userRoleID pgtype.Int8) ([]User, error)
	ListClients(ctx context.Context) ([]Client, error)
	ListProjectTeamUsers(ctx context.Context) ([]ProjectTeam, error)
	ListProjects(ctx context.Context) ([]Project, error)
	ListSBUs(ctx context.Context) ([]Sbus, error)
	ListTasksByProjectID(ctx context.Context) ([]Task, error)
	ListTasksByUserID(ctx context.Context, assignedUserID int64) ([]Task, error)
	ListUserRole(ctx context.Context) ([]UserRole, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateAssignedUserID(ctx context.Context, arg UpdateAssignedUserIDParams) error
	UpdateClient(ctx context.Context, arg UpdateClientParams) error
	UpdateClientStatus(ctx context.Context, arg UpdateClientStatusParams) error
	UpdateProjectByID(ctx context.Context, arg UpdateProjectByIDParams) error
	UpdateSBUHeadUserID(ctx context.Context, arg UpdateSBUHeadUserIDParams) error
	UpdateSbuByID(ctx context.Context, arg UpdateSbuByIDParams) error
	UpdateTaskProgress(ctx context.Context, arg UpdateTaskProgressParams) error
	UpdateTaskProjectID(ctx context.Context, arg UpdateTaskProjectIDParams) error
	UpdateTaskTile(ctx context.Context, arg UpdateTaskTileParams) error
	UpdateUserByRole(ctx context.Context, arg UpdateUserByRoleParams) error
	UpdateUserInformation(ctx context.Context, arg UpdateUserInformationParams) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserProjectIDByID(ctx context.Context, arg UpdateUserProjectIDByIDParams) error
	UpdateUserProjectIDByUserID(ctx context.Context, arg UpdateUserProjectIDByUserIDParams) error
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) error
	UpdateUserSBU(ctx context.Context, arg UpdateUserSBUParams) error
}

var _ Querier = (*Queries)(nil)
